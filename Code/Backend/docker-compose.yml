version: '3.7'
services:
  postgres:
    image: postgres:14  
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  controller:
    build:
      context: ./Controller
    container_name: controller
    environment:
      - DB_URL=postgres://user:password@postgres:5432/mydatabase
      - JWT_SECRET=fd5ac1609d0f2d6a5b7c91385c09669f36137c427abdc4613b51c714ee47e9b6f8c4fd1f65d7bb2a79a00af7274aee19874c77148397aaaac82473eaadc4fc14
      - PORT=5000
      - EXCHANGE_NAME=requests_exchange
      - RABBIT_URL=amqp://user:password@rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "5000:5000"

  routerclient:
    build:
      context: ./RouterClient
    container_name: routerclient
    environment:
      - RABBIT_URL=amqp://user:password@rabbitmq:5672
      - EXCHANGE_NAME=requests_exchange
      - PORT=3000
    depends_on:
      - rabbitmq
    ports:
      - "3000:3000"

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
